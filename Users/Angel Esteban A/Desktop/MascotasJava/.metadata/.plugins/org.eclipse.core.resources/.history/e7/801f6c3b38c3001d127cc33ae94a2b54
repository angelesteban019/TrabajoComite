import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class RegistroMascotas {
    
    public static void main(String[] args) {
        
        Map<Integer, Mascota> registro = new HashMap<>();
        Scanner scanner = new Scanner(System.in);
        
        boolean ejecutar = true;
        
        while (ejecutar) {
            System.out.println("1. Registrar mascota");
            System.out.println("2. Buscar mascota por ID");
            System.out.println("3. Buscar mascota por nombre");
            System.out.println("4. Eliminar mascota");
            System.out.println("5. Imprimir lista completa de mascotas");
            System.out.println("6. Mostrar suma de todas las edades de las mascotas");
            System.out.println("7. Salir");
            System.out.println("Seleccione una opción:");
            int opcion = scanner.nextInt();
            
            switch (opcion) {
                case 1:
                    System.out.println("Ingrese el ID de la mascota:");
                    int id = scanner.nextInt();
                    System.out.println("Ingrese el nombre de la mascota:");
                    String nombre = scanner.next();
                    System.out.println("Ingrese el color de la mascota:");
                    String color = scanner.next();
                    System.out.println("Ingrese la edad de la mascota:");
                    int edad = scanner.nextInt();
                    System.out.println("Ingrese el tipo de la mascota:");
                    String tipo = scanner.next();
                    Mascota mascota = new Mascota(nombre, color, edad, tipo);
                    registro.put(id, mascota);
                    System.out.println("La mascota ha sido registrada exitosamente.");
                    break;
                    
                case 2:
                    System.out.println("Ingrese el ID de la mascota a buscar:");
                    int idBusqueda = scanner.nextInt();
                    if (registro.containsKey(idBusqueda)) {
                        Mascota mascotaEncontrada = registro.get(idBusqueda);
                        System.out.println("Mascota encontrada:");
                        System.out.println(mascotaEncontrada);
                    } else {
                        System.out.println("No se encontró ninguna mascota con ese ID.");
                    }
                    break;
                    
                case 3:
                    System.out.println("Ingrese el nombre de la mascota a buscar:");
                    String nombreBusqueda = scanner.next();
                    boolean encontrada = false;
                    for (Map.Entry<Integer, Mascota> entry : registro.entrySet()) {
                        if (entry.getValue().getNombre().equals(nombreBusqueda)) {
                            encontrada = true;
                            System.out.println("Mascota encontrada:");
                            System.out.println(entry.getValue());
                        }
                    }
                    if (!encontrada) {
                        System.out.println("No se encontró ninguna mascota con ese nombre.");
                    }
                    break;
                    
                case 4:
                    System.out.println("Ingrese el ID de la mascota a eliminar:");
                    int idEliminar = scanner.nextInt();
                    if (registro.containsKey(idEliminar)) {
                        registro.remove(idEliminar);
                        System.out.println("La mascota ha sido eliminada exitosamente.");
                    } else {
                        System.out.println("No se encontró ninguna mascota con ese ID.");
                    }
                    break;
                case 5:
                	System.out.println("Lista completa de mascotas:");
                	if (registro.isEmpty()) {
                	System.out.println("No hay mascotas registradas.");
                	} else {
                	for (Map.Entry<Integer, Mascota> entry : registro.entrySet()) {
                	System.out.println(entry.getValue());
                	}
                	}
                	break;
                	
                case 6:
                    int sumaEdades = 0;
                    for (Map.Entry<Integer, Mascota> entry : registro.entrySet()) {
                        sumaEdades += entry.getValue().getEdad();
                    }
                    System.out.println("La suma de las edades de todas las mascotas es: " + sumaEdades);
                    break;


                case 7:
                    ejecutar = false;
                    break;
                    
                default:
                    System.out.println("Opción inválida.");
                    break;
            }
        }
        
        scanner.close();
    }
}
class Mascota{
private String nombre;
private String color;
private int edad;
private String tipo;

public Mascota(String nombre, String color, int edad, String tipo) {
    this.nombre = nombre;
    this.color = color;
    this.edad = edad;
    this.tipo = tipo;
}

public String getNombre() {
    return nombre;
}

public String getColor() {
    return color;
}

public int getEdad() {
    return edad;
}

public String getTipo() {
    return tipo;
}

@Override
public String toString() {
    return "Nombre: " + nombre + ", Color: " + color + ", Edad: " + edad + ", Tipo: " + tipo;
}
}